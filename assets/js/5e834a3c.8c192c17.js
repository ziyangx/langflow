"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8245],{2255:(e,t,n)=>{n.r(t),n.d(t,{CH:()=>a,assets:()=>l,chCodeConfig:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>s,toc:()=>x});const s=JSON.parse('{"id":"Integrations/Nvidia/integrations-nvidia-ingest","title":"Integrate Nvidia Ingest with Langflow","description":"The NVIDIA Ingest component integrates with the NVIDIA nv-ingest microservice for data ingestion, processing, and extraction of text files.","source":"@site/docs/Integrations/Nvidia/integrations-nvidia-ingest.md","sourceDirName":"Integrations/Nvidia","slug":"/integrations-nvidia-ingest","permalink":"/integrations-nvidia-ingest","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Integrate Nvidia Ingest with Langflow","slug":"/integrations-nvidia-ingest"},"sidebar":"docs","previous":{"title":"Notion Meeting Notes Agent","permalink":"/integrations/notion/notion-agent-meeting-notes"},"next":{"title":"Join the Langflow community","permalink":"/contributing-community"}}');var i=n(74848),o=n(28453),r=n(24754);const c={title:"Integrate Nvidia Ingest with Langflow",slug:"/integrations-nvidia-ingest"},d=void 0,l={},a={annotations:r.hk,Code:r.Cy},h={staticMediaQuery:"not screen, (max-width: 768px)",lineNumbers:!0,showCopyButton:!0,themeName:"github-dark"},x=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Use the NVIDIA Ingest component in a flow",id:"use-the-nvidia-ingest-component-in-a-flow",level:2},{value:"NVIDIA Ingest component parameters",id:"parameters",level:2},{value:"Inputs",id:"inputs",level:3},{value:"Outputs",id:"outputs",level:3}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return a||u("CH",!1),a.Code||u("CH.Code",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("style",{dangerouslySetInnerHTML:{__html:'[data-ch-theme="github-dark"] {  --ch-t-colorScheme: dark;--ch-t-foreground: #c9d1d9;--ch-t-background: #0d1117;--ch-t-lighter-inlineBackground: #0d1117e6;--ch-t-editor-background: #0d1117;--ch-t-editor-foreground: #c9d1d9;--ch-t-editor-lineHighlightBackground: #6e76811a;--ch-t-editor-rangeHighlightBackground: #ffffff0b;--ch-t-editor-infoForeground: #3794FF;--ch-t-editor-selectionBackground: #264F78;--ch-t-focusBorder: #1f6feb;--ch-t-tab-activeBackground: #0d1117;--ch-t-tab-activeForeground: #c9d1d9;--ch-t-tab-inactiveBackground: #010409;--ch-t-tab-inactiveForeground: #8b949e;--ch-t-tab-border: #30363d;--ch-t-tab-activeBorder: #0d1117;--ch-t-editorGroup-border: #30363d;--ch-t-editorGroupHeader-tabsBackground: #010409;--ch-t-editorLineNumber-foreground: #6e7681;--ch-t-input-background: #0d1117;--ch-t-input-foreground: #c9d1d9;--ch-t-input-border: #30363d;--ch-t-icon-foreground: #8b949e;--ch-t-sideBar-background: #010409;--ch-t-sideBar-foreground: #c9d1d9;--ch-t-sideBar-border: #30363d;--ch-t-list-activeSelectionBackground: #6e768166;--ch-t-list-activeSelectionForeground: #c9d1d9;--ch-t-list-hoverBackground: #6e76811a;--ch-t-list-hoverForeground: #c9d1d9; }'}}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component integrates with the ",(0,i.jsx)(t.a,{href:"https://github.com/NVIDIA/nv-ingest",children:"NVIDIA nv-ingest"})," microservice for data ingestion, processing, and extraction of text files."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"nv-ingest"})," service supports multiple extraction methods for PDF, DOCX, and PPTX file types, and includes pre-  and post-processing services like splitting, chunking, and embedding generation."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component imports the NVIDIA ",(0,i.jsx)(t.code,{children:"Ingestor"})," client, ingests files with requests to the NVIDIA ingest endpoint, and outputs the processed content as a list of ",(0,i.jsx)(t.a,{href:"/concepts-objects#data-object",children:"Data"})," objects. ",(0,i.jsx)(t.code,{children:"Ingestor"})," accepts additional configuration options for data extraction from other text formats. To configure these options, see the ",(0,i.jsx)(t.a,{href:"/integrations-nvidia-ingest#parameters",children:"component parameters"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["An NVIDIA Ingest endpoint. For more information on setting up an NVIDIA Ingest endpoint, see the ",(0,i.jsx)(t.a,{href:"https://github.com/NVIDIA/nv-ingest?tab=readme-ov-file#quickstart",children:"NVIDIA Ingest quickstart"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component requires the installation of additional dependencies to your Langflow environment. To install the dependencies in a virtual environment, run the following commands."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"If you have the Langflow repository cloned and installed from source:"}),"\n"]}),"\n",(0,i.jsx)(a.Code,{codeConfig:h,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"source **",props:{style:{color:"#79C0FF"}}},{content:"YOUR_LANGFLOW_VENV",props:{style:{color:"#A5D6FF"}}},{content:"**",props:{style:{color:"#79C0FF"}}},{content:"/bin/activate",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"sync ",props:{style:{color:"#A5D6FF"}}},{content:"--extra ",props:{style:{color:"#79C0FF"}}},{content:"nv-ingest",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"run langflow run",props:{style:{color:"#A5D6FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"If you are installing Langflow from the Python Package Index:"}),"\n"]}),"\n",(0,i.jsx)(a.Code,{codeConfig:h,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"source **",props:{style:{color:"#79C0FF"}}},{content:"YOUR_LANGFLOW_VENV",props:{style:{color:"#A5D6FF"}}},{content:"**",props:{style:{color:"#79C0FF"}}},{content:"/bin/activate",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"pip install 'langflow[nv-ingest]'",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"run langflow run",props:{style:{color:"#A5D6FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"use-the-nvidia-ingest-component-in-a-flow",children:"Use the NVIDIA Ingest component in a flow"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component accepts ",(0,i.jsx)(t.strong,{children:"Message"})," inputs and outputs ",(0,i.jsx)(t.strong,{children:"Data"}),". The component calls a NVIDIA Ingest microservice's endpoint to ingest a local file and extract the text."]}),"\n",(0,i.jsx)(t.p,{children:"To use the NVIDIA Ingest component in your flow, follow these steps:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["In the component library, click the ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component, and then drag it onto the canvas."]}),"\n",(0,i.jsxs)(t.li,{children:["In the ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingestion URL"})," field, enter the URL of the NVIDIA Ingest endpoint.\nOptionally, add the endpoint URL as a ",(0,i.jsx)(t.strong,{children:"Global variable"}),":","\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Settings"}),", and then click ",(0,i.jsx)(t.strong,{children:"Global Variables"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Add New"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Name your variable. Paste your endpoint in the ",(0,i.jsx)(t.strong,{children:"Value"})," field."]}),"\n",(0,i.jsxs)(t.li,{children:["In the ",(0,i.jsx)(t.strong,{children:"Apply To Fields"})," field, select the field you want to globally apply this variable to. In this case, select ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingestion URL"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Save Variable"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["In the ",(0,i.jsx)(t.strong,{children:"Path"})," field, enter the path to the file you want to ingest."]}),"\n",(0,i.jsx)(t.li,{children:"Select which text type to extract from the file.\nThe component supports text, charts, and tables."}),"\n",(0,i.jsxs)(t.li,{children:["Select whether to split the text into chunks.\nModify the splitting parameters in the component's ",(0,i.jsx)(t.strong,{children:"Configuration"})," tab."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Run"})," to ingest the file."]}),"\n",(0,i.jsxs)(t.li,{children:["To confirm the component is ingesting the file, open the ",(0,i.jsx)(t.strong,{children:"Logs"})," pane to view the output of the flow."]}),"\n",(0,i.jsxs)(t.li,{children:["To store the processed data in a vector database, add an ",(0,i.jsx)(t.strong,{children:"AstraDB Vector"})," component to your flow, and connect the ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component to the ",(0,i.jsx)(t.strong,{children:"AstraDB Vector"})," component with a ",(0,i.jsx)(t.strong,{children:"Data"})," output."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"NVIDIA Ingest component flow",src:n(76102).A+"",width:"1934",height:"1486"})}),"\n",(0,i.jsxs)(t.ol,{start:"10",children:["\n",(0,i.jsx)(t.li,{children:"Run the flow.\nInspect your Astra DB vector database to view the processed data."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"NVIDIA Ingest component parameters"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component has the following parameters."]}),"\n",(0,i.jsxs)(t.p,{children:["For more information, see the ",(0,i.jsx)(t.a,{href:"https://nvidia.github.io/nv-ingest/user-guide/",children:"NV-Ingest documentation"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"inputs",children:"Inputs"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Display Name"}),(0,i.jsx)(t.th,{children:"Info"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"base_url"}),(0,i.jsx)(t.td,{children:"NVIDIA Ingestion URL"}),(0,i.jsx)(t.td,{children:"The URL of the NVIDIA Ingestion API."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"path"}),(0,i.jsx)(t.td,{children:"Path"}),(0,i.jsx)(t.td,{children:"File path to process."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_text"}),(0,i.jsx)(t.td,{children:"Extract Text"}),(0,i.jsxs)(t.td,{children:["Extract text from documents. Default: ",(0,i.jsx)(t.code,{children:"True"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_charts"}),(0,i.jsx)(t.td,{children:"Extract Charts"}),(0,i.jsxs)(t.td,{children:["Extract text from charts. Default: ",(0,i.jsx)(t.code,{children:"False"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_tables"}),(0,i.jsx)(t.td,{children:"Extract Tables"}),(0,i.jsxs)(t.td,{children:["Extract text from tables. Default: ",(0,i.jsx)(t.code,{children:"True"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"text_depth"}),(0,i.jsx)(t.td,{children:"Text Depth"}),(0,i.jsxs)(t.td,{children:["The level at which text is extracted. Support for 'block', 'line', and 'span' varies by document type. Default: ",(0,i.jsx)(t.code,{children:"document"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"split_text"}),(0,i.jsx)(t.td,{children:"Split Text"}),(0,i.jsxs)(t.td,{children:["Split text into smaller chunks. Default: ",(0,i.jsx)(t.code,{children:"True"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"split_by"}),(0,i.jsx)(t.td,{children:"Split By"}),(0,i.jsxs)(t.td,{children:["How to split into chunks. 'size' splits by number of characters. Default: ",(0,i.jsx)(t.code,{children:"word"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"split_length"}),(0,i.jsx)(t.td,{children:"Split Length"}),(0,i.jsxs)(t.td,{children:["The size of each chunk based on the 'split_by' method. Default: ",(0,i.jsx)(t.code,{children:"200"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"split_overlap"}),(0,i.jsx)(t.td,{children:"Split Overlap"}),(0,i.jsxs)(t.td,{children:["The number of segments to overlap from the previous chunk. Default: ",(0,i.jsx)(t.code,{children:"20"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"max_character_length"}),(0,i.jsx)(t.td,{children:"Max Character Length"}),(0,i.jsxs)(t.td,{children:["The maximum number of characters in each chunk. Default: ",(0,i.jsx)(t.code,{children:"1000"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"sentence_window_size"}),(0,i.jsx)(t.td,{children:"Sentence Window Size"}),(0,i.jsxs)(t.td,{children:["The number of sentences to include from previous and following chunks when ",(0,i.jsx)(t.code,{children:"split_by=sentence"}),". Default: ",(0,i.jsx)(t.code,{children:"0"}),"."]})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"outputs",children:"Outputs"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Ingest"})," component outputs a list of ",(0,i.jsx)(t.a,{href:"/concepts-objects#data-object",children:"Data"})," objects where each object contains:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"text"}),": The extracted content.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"For text documents: The extracted text content."}),"\n",(0,i.jsx)(t.li,{children:"For tables and charts: The extracted table/chart content."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"file_path"}),": The source file name and path."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"document_type"}),': The type of the document ("text" or "structured").']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"description"}),": Additional description of the content."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The output varies based on the ",(0,i.jsx)(t.code,{children:"document_type"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Documents with ",(0,i.jsx)(t.code,{children:'document_type: "text"'})," contain:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Raw text content extracted from documents, for example, paragraphs from PDFs or DOCX files."}),"\n",(0,i.jsxs)(t.li,{children:["Content stored directly in the ",(0,i.jsx)(t.code,{children:"text"})," field."]}),"\n",(0,i.jsxs)(t.li,{children:["Content extracted using the ",(0,i.jsx)(t.code,{children:"extract_text"})," parameter."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Documents with ",(0,i.jsx)(t.code,{children:'document_type: "structured"'})," contain:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Text extracted from tables and charts and processed to preserve structural information."}),"\n",(0,i.jsxs)(t.li,{children:["Content extracted using the ",(0,i.jsx)(t.code,{children:"extract_tables"})," and ",(0,i.jsx)(t.code,{children:"extract_charts"})," parameters."]}),"\n",(0,i.jsxs)(t.li,{children:["Content stored in the ",(0,i.jsx)(t.code,{children:"text"})," field after being processed from the ",(0,i.jsx)(t.code,{children:"table_content"})," metadata."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Images are currently not supported and will be skipped during processing."})})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},76102:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/nvidia-component-ingest-astra-ac58faad6d13d928d400455962bf6028.png"}}]);